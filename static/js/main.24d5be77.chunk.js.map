{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","required","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24d5be77.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n        if (!trimmedNewTaskContent) {\r\n            return\r\n        };\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__field \"\r\n                required placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n};\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"taskList__item\">\r\n        {tasks.map(task => (\r\n            <li\r\n                className={`taskList__content ${task.done && hideDone ? \"taskList__item--hidden\" : \"\"}`}>\r\n                <button className=\"taskList__button\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"✔\" : \"\"}\r\n                </button>\r\n                <span className={\r\n                    `task ${task.done ? \"taskList__content--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </span>\r\n                <button\r\n                    className=\"taskList__button taskList__button--remove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >&#128465;\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n\r\n);\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"section__buttons \">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button onClick={toggleHideDone} className=\"section__button\">\r\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                 </button>\r\n\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"section__button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                 </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <div className=\"section_items\">\r\n      <h2 className=\"section__header\">{title}</h2>\r\n      {extraHeaderContent}\r\n    </div>\r\n    <div className=\"taskList\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","const Header = ({ title }) => (\r\n    <header>\r\n        <h1> {title}</h1>\r\n    </header>\r\n\r\n)\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from './Header';\nimport Container from './Container';\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"Zadanie 1\", done: false },\n    { id: 2, content: \"Zadanie 2\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container className=\"container\">\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}